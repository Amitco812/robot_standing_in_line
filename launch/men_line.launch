<?xml version="1.0" encoding="UTF-8"?>
<launch>
    <arg name = "speech_mock" value = "true"/>
    <include file="$(find armadillo2)/launch/armadillo2.launch" >
        <arg name="gazebo" value="true" doc="execute armadillo2 inside gazebo sim"/>
        <arg name="world_name" value="$(find robot_standing_in_line)/worlds/men_line.world"/>
        <arg name="x" value="2.0"/>
        <arg name="y" value="1.0"/>
        <arg name="z" value="0.0"/>
        <arg name="Y" value="1.7"/>
        <arg name="kinect" value="true"/>
        <arg name="lidar" value="true"/>
				<!--<arg name="gmapping" value="true"/>-->
       	<arg name="amcl" value="true"/>
        <arg name="have_map" value="true" doc="set to true to use pre-saved map"/>
        <arg name="map" value="$(find robot_standing_in_line)/maps/men_line.yaml" doc="pre-saved map path"/>
        <arg name="move_base" value="true"/>
    		<arg name="moveit" default="true"/>
    </include>
		<include file="$(find line_detector)/launch/line_end_detection_py3.launch" />
		<node pkg="robot_standing_in_line" type="tracker_service.py" name="tracker_service" output="screen"/>
    <node pkg="robot_standing_in_line" type="manager.py" name="manager" output="screen" args = "$(arg speech_mock)"/>
		
    <node name="find_object_node" pkg="object_detection" type="find_objects_node" output="screen">
        <param name="~object_id" value="1"/>
        <param name="~depth_topic1" value="/kinect2/qhd/points"/> 
        <param name="~depth_topic2" value="/kinect2/qhd/points"/>  
        <rosparam file="$(find robotican_demos_upgrade)/config/red_object.yaml" command="load"/>
		</node>
 <node name="pid_position_adjustment_server" pkg="robotican_demos_upgrade" type="pidPositionAdjustmentServer" output="screen"> 
    </node>

    <node name="nav_services" pkg="armadillo_navigation_upgrade" type="navigation_services_with_feedback.py" output="screen">
    <rosparam file="$(find armadillo_navigation_upgrade)/config_nav_service/nav_service_req_sim.yaml" command="load"/>
    </node>

    <node name="objects_handler" pkg="object_detection" type="objects_handler" output="screen">
        <param name="~db_path" value=""/>
    </node>

    <arg name="start_position" default="cobra_center" />
    <arg name="end_position" default="to_cheak" />
    <arg name="give_position" default="give" />
    <arg name="detection_method_base_on" default="color" /> 


    <node name="pick" pkg="robotican_demos_upgrade" type="pickNPlace" output="screen" required="true">
        <param name="~start_position_name" value="$(arg start_position)"/>
        <param name="~end_position_name" value="$(arg end_position)"/>
        <param name="~object_name" value="can"/>
        <param name="~detection_method" value="$(arg detection_method_base_on)"/>
    </node>
		
		<node name="grasp_indicator" pkg="robotican_demos_upgrade" type="grasp_indicator.py" output="screen"> 
				<param name="joints_topic" value="/joint_states"/>
		</node>

</launch>
